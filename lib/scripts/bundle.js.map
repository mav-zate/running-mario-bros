{"version":3,"sources":["webpack:///webpack/bootstrap 9b855ac3bd6033131e97","webpack:///./lib/scripts/constants.js","webpack:///./lib/scripts/initialize.js","webpack:///./lib/scripts/util.js","webpack:///./lib/scripts/brick.js","webpack:///./lib/scripts/brick_generator.js","webpack:///./lib/scripts/game.js","webpack:///./lib/scripts/goomba.js","webpack:///./lib/scripts/mario.js","webpack:///./lib/scripts/goomba_generator.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACfA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AAAA;AAAA;;;;;;;;ACRA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACnDA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;AClDoD;AACpD;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;AC/BD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;ACzMA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"./lib/scripts/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b855ac3bd6033131e97","const CANVAS_HEIGHT = 500;\nconst CANVAS_WIDTH = 800;\nconst BRICK_LENGTH = 40;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/constants.js\n// module id = 0\n// module chunks = 0","import Mario from './mario';\nimport BrickGenerator from './brick_generator';\nimport GoombaGenerator from './goomba_generator';\nimport Goomba from './goomba';\n\nconst initializeSuite = (context) => {\n  let objects = {};\n\n  objects.mario = new Mario(context);\n  objects.BrickGenerator = new BrickGenerator(context);\n  objects.GoombaGenerator = new GoombaGenerator(context, objects.mario);\n\n  return objects;\n};\n\nexport default initializeSuite;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/initialize.js\n// module id = 1\n// module chunks = 0","export const objToArr = (obj) => {\n  let array = [];\n\n  Object.keys(obj).forEach((key) => {\n    array.push(obj[key]);\n  });\n\n  return array;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/util.js\n// module id = 2\n// module chunks = 0","const CANVAS_HEIGHT = 500;\nconst CANVAS_WIDTH = 800;\nconst BRICK_LENGTH = 40;\n\n\nclass Brick {\n  constructor(context, id) {\n    this.state = {\n      image: new Image(),\n      xPos: -1,\n      yPos: -1,\n      height: BRICK_LENGTH,\n      id: id,\n    };\n    this.context = context;\n\n    this.initialize();\n    this.setPos = this.setPos.bind(this);\n    this.getImage = this.getImage.bind(this);\n    this.getPos = this.getPos.bind(this);\n    this.getId = this.getId.bind(this);\n    this.getHeight = this.getHeight.bind(this);\n  }\n\n  initialize() {\n    this.state.image.src =\n      \"https://s3.amazonaws.com/running-mario-bros-dev/env/8bit_brick.png\";\n  }\n\n  setPos(x, y) {\n    this.state.xPos = x;\n    this.state.yPos = y;\n  }\n\n  getPos() {\n    return [this.state.xPos, this.state.yPos];\n  }\n\n  getHeight() {\n    return this.state.height;\n  }\n\n  getImage() {\n    return this.state.image;\n  }\n\n  getId() {\n    return this.state.id;\n  }\n}\n\nexport default Brick;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/brick.js\n// module id = 3\n// module chunks = 0","import Brick from './brick';\n\nconst CANVAS_HEIGHT = 500;\nconst CANVAS_WIDTH = 800;\nconst BRICK_LENGTH = 40;\n\n\nclass BrickGenerator {\n  constructor(context) {\n    this.state = {\n      bricks: [],\n      brickId: 1,\n    };\n    this.context = context;\n    this.getBricks = this.getBricks.bind(this);\n    this.render = this.render.bind(this);\n\n    this.initialize();\n  }\n\n  initialize() {\n    for (let y = 0; y < 2; y++) {\n      for (let x = 0; x < 20; x++) {\n        let brick = new Brick(this.context, this.state.brickId);\n        this.state.brickId++;\n        brick.setPos(x * BRICK_LENGTH, CANVAS_HEIGHT - ((y + 1) * BRICK_LENGTH));\n        this.state.bricks.push(brick);\n      }\n    }\n  }\n\n  render() {\n    this.context.clearRect(0, CANVAS_HEIGHT - (2 * BRICK_LENGTH),\n    CANVAS_WIDTH, (2 * BRICK_LENGTH));\n\n\n    this.state.bricks.forEach((brick) => {\n      const pos = brick.getPos();\n      this.context.drawImage(brick.getImage(),\n        pos[0], pos[1], BRICK_LENGTH, BRICK_LENGTH\n      );\n    });\n  }\n\n  getBricks() {\n    return this.state.bricks;\n  }\n}\n\n\nexport default BrickGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/brick_generator.js\n// module id = 4\n// module chunks = 0","import { CANVAS_HEIGHT, CANVAS_WIDTH, BRICK_LENGTH } from './constants';\nimport * as util from './util';\nimport initializeSuite from './initialize';\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById('game-screen');\n  const context = canvas.getContext('2d');\n  const sprites = initializeSuite(context);\n  const BrickGenerator = sprites.BrickGenerator;\n  const bricks = BrickGenerator.getBricks();\n  const GoombaGenerator = sprites.GoombaGenerator;\n\n\n  const mario = sprites.mario;\n  mario.receiveOthers(bricks);\n\n\n  window.setInterval(GoombaGenerator.render, 17);\n  window.setInterval(BrickGenerator.render, 17);\n  window.setInterval(mario.render, 60);\n  document.addEventListener('keypress', (e) => {\n    // add other game start statuses, but for now, just make mario run\n    if (e.key === 'Enter') {\n      mario.setRunning();\n      // make mario class scalable\n      window.addEventListener('keydown', keyPress => (mario.jump(keyPress)));\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/game.js\n// module id = 5\n// module chunks = 0","const GOOMBA_LENGTH = 40;\nconst CANVAS_WIDTH = 800;\nconst CANVAS_HEIGHT = 500;\n\nclass Goomba {\n  constructor(context, id) {\n    this.state = {\n      id: id,\n      xPos: CANVAS_WIDTH,\n      yPos: CANVAS_HEIGHT - (3 * GOOMBA_LENGTH),\n      prevXPos: -1,\n      prevYPos: -1,\n      images: [new Image(), new Image()],\n      alive: true,\n      runIdx: 0,\n      speed: 4,\n      height: GOOMBA_LENGTH,\n    };\n    this.context = context;\n\n    this.render = this.render.bind(this);\n    this.setPos = this.setPos.bind(this);\n    this.setSpeed = this.setSpeed.bind(this);\n    this.getHeight = this.getHeight.bind(this);\n    this.getId = this.getId.bind(this);\n    this.getSpeed = this.getSpeed.bind(this);\n    this.initialize();\n  }\n\n  initialize() {\n    this.state.images[0].src = \"https://s3.amazonaws.com/running-mario-bros-dev/enemies/goomba/goomba_left.png\";\n    this.state.images[1].src = \"https://s3.amazonaws.com/running-mario-bros-dev/enemies/goomba/goomba_right.png\";\n  }\n\n  render() {\n    // erase prev rectangle\n    if (this.state.prevXPos !== -1 || this.state.prevYPos !== -1) {\n      this.context.clearRect(this.state.prevXPos, this.state.prevYPos,\n        GOOMBA_LENGTH, GOOMBA_LENGTH);\n      this.state.prevXPos = -1;\n      this.state.prevYPos = -1;\n    } else {\n      this.context.clearRect(this.state.xPos, this.state.yPos,\n        GOOMBA_LENGTH, GOOMBA_LENGTH);\n    }\n\n\n    // re-render Goomba\n    if (this.state.alive) {\n      this.state.runIdx = (this.state.runIdx + 1) % this.state.images.length;\n      this.context.drawImage(this.state.images[this.state.runIdx],\n      this.state.xPos, this.state.yPos, GOOMBA_LENGTH, GOOMBA_LENGTH);\n    }\n\n    this.setPos(this.state.xPos - this.state.speed, this.state.yPos);\n  }\n\n  setPos(x, y) {\n    this.state.prevXPos = this.state.xPos;\n    this.state.prevYPos = this.state.yPos;\n    this.state.xPos = x;\n    this.state.yPos = y;\n  }\n\n  getPos() {\n    return [this.state.xPos, this.state.yPos];\n  }\n\n  setSpeed(speed) {\n    this.state.speed = speed;\n  }\n\n  getHeight() {\n    return this.state.height;\n  }\n\n  getId() {\n    return this.state.id;\n  }\n\n  getSpeed() {\n    return this.state.speed;\n  }\n}\n\nexport default Goomba;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/goomba.js\n// module id = 6\n// module chunks = 0","\nconst STANDING = 'STANDING';\nconst RUNNING = 'RUNNING';\nconst JUMPING = 'JUMPING';\nconst CANVAS_HEIGHT = 500;\nconst SMALL_MARIO_HEIGHT = 40;\nconst SMALL_MARIO_WIDTH =  3 * SMALL_MARIO_HEIGHT / 4;\nconst BRICK_LENGTH = 40;\nconst G_ACCELERATION = 4;\n\nclass Mario {\n  constructor(context) {\n    this.state = {\n      xPos: 2 * SMALL_MARIO_HEIGHT,\n      yPos: CANVAS_HEIGHT - (3 * SMALL_MARIO_HEIGHT),\n      prevXPos: -1,\n      prevYPos: -1,\n      status: STANDING,\n      image: {\n        standing: new Image(),\n        running: [new Image(), new Image(), new Image()],\n        jumping: new Image(),\n      },\n      jump: {\n        baseHeight: -1,\n        velocity: -1,\n      },\n      others: [],\n      runIdx: 0,\n    };\n    this.context = context;\n    this.initialize();\n\n    this.render = this.render.bind(this);\n    this.jump = this.jump.bind(this);\n    this.renderJump = this.renderJump.bind(this);\n    this.setRunning = this.setRunning.bind(this);\n    this.setJumping = this.setJumping.bind(this);\n    this.handleBottomCollision = this.handleBottomCollision.bind(this);\n    this.handleFrontCollision = this.handleFrontCollision.bind(this);\n    this.receiveOthers = this.receiveOthers.bind(this);\n    this.removeOther = this.removeOther.bind(this);\n    this.landOn = this.landOn.bind(this);\n    this.setPos = this.setPos.bind(this);\n    this.getPos = this.getPos.bind(this);\n  }\n\n  initialize() {\n    this.state.image.standing.src = \"https://s3.amazonaws.com/running-mario-bros-dev/mario/standing.png\";\n    this.state.image.running[0].src = \"https://s3.amazonaws.com/running-mario-bros-dev/mario/running_armFront.png\";\n    this.state.image.running[1].src = \"https://s3.amazonaws.com/running-mario-bros-dev/mario/running_armDown.png\";\n    this.state.image.running[2].src = \"https://s3.amazonaws.com/running-mario-bros-dev/mario/running_armBack.png\";\n    this.state.image.jumping.src = \"https://s3.amazonaws.com/running-mario-bros-dev/mario/jumping.png\";\n  }\n\n  render() {\n    // Erase previous rectangle if any\n    if (this.state.prevXPos !== -1 || this.state.prevYPos !== -1) {\n      this.context.clearRect(this.state.prevXPos, this.state.prevYPos,\n        SMALL_MARIO_HEIGHT, SMALL_MARIO_HEIGHT);\n      this.state.prevXPos = -1;\n      this.state.prevYPos = -1;\n    } else {\n      this.context.clearRect(this.state.xPos, this.state.yPos,\n        SMALL_MARIO_HEIGHT, SMALL_MARIO_HEIGHT);\n    }\n\n\n    // handle bottom collisions\n    this.handleFrontCollision();\n    if (this.state.status === JUMPING) {\n      this.handleBottomCollision();\n    }\n\n    // re-render Mario\n    switch (this.state.status) {\n      case STANDING:\n        this.runIdx = 0;\n        this.context.drawImage(this.state.image.standing,\n          this.state.xPos, this.state.yPos,\n          SMALL_MARIO_WIDTH, SMALL_MARIO_HEIGHT);\n        break;\n      case RUNNING:\n        this.runIdx = (this.runIdx + 1) % this.state.image.running.length;\n        this.context.drawImage(this.state.image.running[this.runIdx],\n          this.state.xPos, this.state.yPos,\n          SMALL_MARIO_WIDTH, SMALL_MARIO_HEIGHT);\n          break;\n      case JUMPING:\n          this.renderJump();\n          break;\n      default:\n        return;\n    }\n  }\n\n  landOn(pos) {\n    this.setPos(this.state.xPos, pos[1] - SMALL_MARIO_HEIGHT);\n    this.setRunning();\n  }\n\n  setPos(x, y) {\n    this.state.xPos = x;\n    this.state.yPos = y;\n  }\n\n  renderJump() {\n    if (this.state.yPos <= this.state.jump.baseHeight) {\n      this.state.jump.velocity -= G_ACCELERATION;\n      this.state.yPos -= this.state.jump.velocity;\n    } else {\n      this.setRunning();\n    }\n    this.context.drawImage(this.state.image.jumping,\n      this.state.xPos, this.state.yPos,\n      SMALL_MARIO_WIDTH, SMALL_MARIO_HEIGHT);\n  }\n\n  jump(e) {\n    if (e.key === \" \" && this.state.status === RUNNING) {\n      this.runIdx = 0;\n      this.setJumping();\n    }\n  }\n\n  setRunning() {\n    this.state.status = RUNNING;\n  }\n\n  setJumping() {\n    this.state.status = JUMPING;\n    this.state.jump.baseHeight = this.state.yPos;\n    this.state.jump.velocity = 30;\n  }\n\n  handleBottomCollision() {\n    let currentBottom = this.state.yPos + SMALL_MARIO_HEIGHT;\n    let nextYPos = this.state.yPos - (this.state.jump.velocity - G_ACCELERATION);\n    let nextBottom = nextYPos + SMALL_MARIO_HEIGHT;\n\n\n    this.state.others.forEach(other => {\n      let otherPos = other.getPos();\n      let withinXRange = this.state.xPos >= otherPos[0] &&\n                         this.state.xPos <= otherPos[0] + BRICK_LENGTH;\n      if (withinXRange && currentBottom > otherPos[1] ||\n        withinXRange && nextBottom >= otherPos[1]) {\n        console.log('bottom-collision');\n        this.landOn(otherPos);\n        return;\n      }\n    });\n  }\n\n  handleFrontCollision() {\n    let marioBottom = this.state.yPos + SMALL_MARIO_HEIGHT;\n    let marioFront = this.state.xPos + SMALL_MARIO_WIDTH;\n\n    this.state.others.forEach(other => {\n      let otherPos = other.getPos();\n      let minKillHeight = otherPos[1] + (other.getHeight() / 4);\n      if (marioFront >= otherPos[0] && marioBottom > minKillHeight\n        && otherPos[0] >= this.state.xPos) {\n        console.log('front-collision');\n        return;\n      }\n    });\n  }\n\n  receiveOthers(others) {\n    this.state.others = this.state.others.concat(others);\n  }\n\n  removeOther(otherId) {\n    let index;\n\n    for (let i = 0; i < this.state.others.length; i++) {\n      if (this.state.others[i].getId() === otherId) {\n        index = i;\n        break;\n      }\n    }\n\n    this.state.others.splice(index, 1);\n  }\n\n  getPos() {\n    return [this.state.xPos, this.state.yPos];\n  }\n\n}\n\n/* mario, possible collisions:\n  1. land on other object\n    - if bottom of mario greater than top of other\n    - or if next position greater than top of other\n  2. hit bottom of other object\n  3. hit side of other object\n*/\n\n\nexport default Mario;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/mario.js\n// module id = 7\n// module chunks = 0","import Goomba from './goomba';\n\n\nconst GOOMBA_HEIGHT = 40;\nconst CANVAS_WIDTH = 800;\nconst CANVAS_HEIGHT = 500;\n\nclass GoombaGenerator {\n  constructor(context, mario) {\n    this.state = {\n      goombas: [],\n      intervals: [500, 750, 1000, 1250, 1500, 1750, 2000],\n      mario: mario,\n      goombaId: 100,\n    };\n    this.context = context;\n    this.getGoombas = this.getGoombas.bind(this);\n    this.render = this.render.bind(this);\n    this.generateGoomba = this.generateGoomba.bind(this);\n    this.removeGoomba = this.removeGoomba.bind(this);\n    this.runGenerator = this.runGenerator.bind(this);\n\n\n    this.runGenerator();\n  }\n\n  runGenerator() {\n    let intervals = this.state.intervals;\n    let randomIndex = Math.floor(Math.random() * intervals.length);\n    let randomTime = intervals[randomIndex];\n    window.setTimeout(() => {\n      this.generateGoomba();\n      this.runGenerator();\n    }, randomTime);\n  }\n\n  render() {\n    this.state.goombas.forEach((goomba) => {\n      goomba.render();\n    });\n    this.removeGoomba();\n  }\n\n  getGoombas() {\n    return this.state.goombas;\n  }\n\n  generateGoomba() {\n    let goomba = new Goomba(this.context, this.state.goombaId);\n    this.state.goombaId++;\n    this.state.goombas.push(goomba);\n    this.state.mario.receiveOthers([goomba]);\n  }\n\n  removeGoomba() {\n    if (this.state.goombas.length === 0) {\n      return;\n    }\n\n    let firstGoomba = this.state.goombas[0];\n    let goombaRightSide = firstGoomba.getPos()[0] + firstGoomba.getHeight();\n    // either passed under mario or killed\n    if (goombaRightSide < 0) {\n      // remove from mario's others and goomba generator\n      let goombaId = firstGoomba.getId();\n      this.state.goombas.shift();\n      this.state.mario.removeOther(goombaId);\n    }\n  }\n}\n\n\nexport default GoombaGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/scripts/goomba_generator.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}